package com.seeu.user.dao;

import com.seeu.user.model.Course;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CourseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lessons
     *
     * @mbggenerated Thu Jun 15 01:55:09 CST 2017
     */
    @Delete({
        "delete from lessons",
        "where courseid = #{courseid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String courseid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lessons
     *
     * @mbggenerated Thu Jun 15 01:55:09 CST 2017
     */
    @Insert({
        "insert into lessons (courseid, code, ",
        "name, day, time, ",
        "teacher, location, credit, ",
        "week, remaining, ",
        "total, user)",
        "values (#{courseid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=CHAR}, #{day,jdbcType=INTEGER}, #{time,jdbcType=CHAR}, ",
        "#{teacher,jdbcType=CHAR}, #{location,jdbcType=CHAR}, #{credit,jdbcType=INTEGER}, ",
        "#{week,jdbcType=VARCHAR}, #{remaining,jdbcType=INTEGER}, ",
        "#{total,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR})"
    })
    int insert(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lessons
     *
     * @mbggenerated Thu Jun 15 01:55:09 CST 2017
     */
    @InsertProvider(type=CourseSqlProvider.class, method="insertSelective")
    int insertSelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lessons
     *
     * @mbggenerated Thu Jun 15 01:55:09 CST 2017
     */
    @Select({
        "select",
        "courseid, code, name, day, time, teacher, location, credit, week, remaining, ",
        "total, user",
        "from lessons",
        "where courseid = #{courseid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="courseid", property="courseid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="code", property="code", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.CHAR),
        @Result(column="day", property="day", jdbcType=JdbcType.INTEGER),
        @Result(column="time", property="time", jdbcType=JdbcType.CHAR),
        @Result(column="teacher", property="teacher", jdbcType=JdbcType.CHAR),
        @Result(column="location", property="location", jdbcType=JdbcType.CHAR),
        @Result(column="credit", property="credit", jdbcType=JdbcType.INTEGER),
        @Result(column="week", property="week", jdbcType=JdbcType.VARCHAR),
        @Result(column="remaining", property="remaining", jdbcType=JdbcType.INTEGER),
        @Result(column="total", property="total", jdbcType=JdbcType.INTEGER),
        @Result(column="user", property="user", jdbcType=JdbcType.VARCHAR)
    })
    Course selectByPrimaryKey(String courseid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lessons
     *
     * @mbggenerated Thu Jun 15 01:55:09 CST 2017
     */
    @UpdateProvider(type=CourseSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lessons
     *
     * @mbggenerated Thu Jun 15 01:55:09 CST 2017
     */
    @Update({
        "update lessons",
        "set code = #{code,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=CHAR},",
          "day = #{day,jdbcType=INTEGER},",
          "time = #{time,jdbcType=CHAR},",
          "teacher = #{teacher,jdbcType=CHAR},",
          "location = #{location,jdbcType=CHAR},",
          "credit = #{credit,jdbcType=INTEGER},",
          "week = #{week,jdbcType=VARCHAR},",
          "remaining = #{remaining,jdbcType=INTEGER},",
          "total = #{total,jdbcType=INTEGER},",
          "user = #{user,jdbcType=VARCHAR}",
        "where courseid = #{courseid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Course record);
}